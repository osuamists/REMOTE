#include <IRremote.h>

IRsend irsend;

const unsigned int AC_irSignal1[] PROGMEM ={3760,1768,432,1352,432,1348,436,360,432,360,432,360,436,1340,440,356,436,352,440,1344,440,1340,440,356,436,1344,440,352,436,356,436,1344,440,1340,444,348,444,1336,444,1340,440,356,440,348,440,1344,436,356,436,352,440,1340,440,356,436,352,440,352,440,352,440,352,436,352,444,348,440,352,440,352,436,360,432,356,436,352,440,352,440,352,440,352,436,352,440,352,440,352,440,352,436,356,440,1336,444,352,440,352,436,1344,440,1340,444,352,436,352,444,348,440,352,440,348,444,348,440,352,440,1340,444,1340,440,1340,444,352,440,348,444,348,440,352,440,352,440,348,444,348,440,1340,444,1340,440,1340,444,352,440,352,440,348,444,348,440,352,440,352,440,352,440,348,440,352,440,352,440,352,440,348,440,352,440,352,440,352,440,380,412,352,436,352,440,352,440,352,440,352,436,356,436,356,436,352,440,348,444,352,436,356,436,356,436,356,436,352,440,352,436,352,440,356,436,352,440,352,440,1340,440,1344,440,1340,440,1340,444,1340,440,1340,444,352,440};

const unsigned int AC_irSignal2[] PROGMEM ={3796,1732,440,1344,440,1340,440,352,440,352,440,352,440,1340,440,352,440,352,440,1340,440,1344,440,352,440,1340,440,352,436,356,440,1340,440,1344,440,352,440,1340,436,1348,440,352,440,352,436,1344,440,352,436,356,436,1344,440,352,436,356,440,352,440,348,440,352,440,352,440,352,440,352,436,352,440,352,440,352,440,352,440,348,440,352,440,352,440,352,440,352,436,1344,440,352,440,352,440,1340,440,352,436,356,436,1344,436,1348,440,352,440,352,436,352,440,352,440,352,440,352,436,356,440,1340,440,1344,436,1344,440,352,440,352,436,356,440,352,436,356,436,352,440,352,440,1340,440,1340,444,1340,440,352,440,352,440,348,440,356,436,356,436,352,440,352,440,348,440,352,440,352,440,352,440,352,440,352,436,352,440,352,440,352,440,352,440,352,440,352,436,356,436,352,440,352,440,352,436,356,436,352,440,352,440,352,440,348,440,352,440,356,436,352,440,348,440,352,444,348,440,352,440,1340,440,352,440,352,440,352,440,352,436,352,440,1344,440};

const unsigned int AC_irSignal3[] PROGMEM ={3760,1768,432,1352,432,1348,436,360,432,360,432,360,436,1340,440,356,436,352,440,1344,440,1340,440,356,436,1344,440,352,436,356,436,1344,440,1340,444,348,444,1336,444,1340,440,356,440,348,440,1344,436,356,436,352,440,1340,440,356,436,352,440,352,440,352,440,352,436,352,444,348,440,352,440,352,436,360,432,356,436,352,440,352,440,352,440,352,436,352,440,352,440,352,440,352,436,356,440,1336,444,352,440,352,436,1344,440,1340,444,352,436,352,444,348,440,352,440,348,444,348,440,352,440,1340,444,1340,440,1340,444,352,440,348,444,348,440,352,440,352,440,348,444,348,440,1340,444,1340,440,1340,444,352,440,352,440,348,444,348,440,352,440,352,440,352,440,348,440,352,440,352,440,352,440,348,440,352,440,352,440,352,440,380,412,352,436,352,440,352,440,352,440,352,436,356,436,356,436,352,440,348,444,352,436,356,436,356,436,356,436,352,440,352,436,352,440,356,436,352,440,352,440,1340,440,1344,440,1340,440,1340,444,1340,440,1340,444,352,440};

const unsigned int AC_irSignal4[] PROGMEM ={3796,1732,440,1344,440,1340,440,352,440,352,440,352,440,1340,440,352,440,352,440,1340,440,1344,440,352,440,1340,440,352,436,356,440,1340,440,1344,440,352,440,1340,436,1348,440,352,440,352,436,1344,440,352,436,356,436,1344,440,352,436,356,440,352,440,348,440,352,440,352,440,352,440,352,436,352,440,352,440,352,440,352,440,348,440,352,440,352,440,352,440,352,436,1344,440,352,440,352,440,1340,440,352,436,356,436,1344,436,1348,440,352,440,352,436,352,440,352,440,352,440,352,436,356,440,1340,440,1344,436,1344,440,352,440,352,436,356,440,352,436,356,436,352,440,352,440,1340,440,1340,444,1340,440,352,440,352,440,348,440,356,436,356,436,352,440,352,440,348,440,352,440,352,440,352,440,352,440,352,436,352,440,352,440,352,440,352,440,352,440,352,436,356,436,352,440,352,440,352,436,356,436,352,440,352,440,352,440,348,440,352,440,356,436,352,440,348,440,352,444,348,440,352,440,1340,440,352,440,352,440,352,440,352,436,352,440,1344,440};

const unsigned int AC_irSignal5[] PROGMEM ={3760,1768,432,1352,432,1348,436,360,432,360,432,360,436,1340,440,356,436,352,440,1344,440,1340,440,356,436,1344,440,352,436,356,436,1344,440,1340,444,348,444,1336,444,1340,440,356,440,348,440,1344,436,356,436,352,440,1340,440,356,436,352,440,352,440,352,440,352,436,352,444,348,440,352,440,352,436,360,432,356,436,352,440,352,440,352,440,352,436,352,440,352,440,352,440,352,436,356,440,1336,444,352,440,352,436,1344,440,1340,444,352,436,352,444,348,440,352,440,348,444,348,440,352,440,1340,444,1340,440,1340,444,352,440,348,444,348,440,352,440,352,440,348,444,348,440,1340,444,1340,440,1340,444,352,440,352,440,348,444,348,440,352,440,352,440,352,440,348,440,352,440,352,440,352,440,348,440,352,440,352,440,352,440,380,412,352,436,352,440,352,440,352,440,352,436,356,436,356,436,352,440,348,444,352,436,356,436,356,436,356,436,352,440,352,436,352,440,356,436,352,440,352,440,1340,440,1344,440,1340,440,1340,444,1340,440,1340,444,352,440};


void setup() {
  //insert your own setup code here
}

void loop() {
  //replace this with your own code.
  while (true){ //loop forever sending the test signals, with 5 second gaps
  sendRAW_Flash(AC_irSignal1, sizeof(AC_irSignal1)/sizeof(int),38); //send AC signal #1 @ 33kHz
  delay(5000); //a good idea to have gaps between signals
  
  sendRAW_Flash(AC_irSignal2, sizeof(AC_irSignal2)/sizeof(int),38); //send AC signal #2 @ 36kHz
  delay(5000); //a good idea to have gaps between signals
  
  sendRAW_Flash(AC_irSignal3, sizeof(AC_irSignal3)/sizeof(int),38); //send AC signal #3 @ 38kHz
  delay(5000); //a good idea to have gaps between signals
  
  sendRAW_Flash(AC_irSignal4, sizeof(AC_irSignal4)/sizeof(int),38); //send AC signal #4 @ 40kHz
  delay(5000); //a good idea to have gaps between signals
  
  sendRAW_Flash(AC_irSignal5, sizeof(AC_irSignal5)/sizeof(int),38); //send AC signal #3 @ 56kHz
  delay(5000); //a good idea to have gaps between signals
  }
  delay(5000);
}

void sendRAW_Flash(const unsigned int * signalArray, unsigned int signalLength, unsigned char carrierFreq) {

  irsend.enableIROut(carrierFreq); //initialise the carrier frequency for each signal to be sent
  
  for (unsigned int i=0;i<signalLength;i++){
    //tmp=pgm_read_word_near(&signalArray[i]);
   // tmp=cleanPanasonic(tmp); //not needed
    if (i & 1) irsend.space(pgm_read_word_near(&signalArray[i]));
    else irsend.mark(pgm_read_word_near(&signalArray[i]));
  }
  irsend.space(1);//make sure IR is turned off at end of signal

}
